1. Extracting Insights from Customer Data
   Suppose you have a list of dictionaries, where each dictionary represents a customer's data. Each dictionary has the following keys: name, age, orders. The orders key contains a list of order IDs.
   customer_data = [
    {'name': 'Alice', 'age': 30, 'orders': [101, 103, 105]},
    {'name': 'Bob', 'age': 25, 'orders': [102, 104]},
    {'name': 'Charlie', 'age': 28, 'orders': [106]}]
   Write a function get_total_orders(customer_list) that takes the customer_data list as a parameter and returns the total number of orders across all customers.
   You have to write the function in the input box below.
A:  def get_total_orders(customer_list):
      total_orders = sum(len(customer['orders'])for customer in customer_list)
      return total_orders
2. Temperature Data Mapping
   A compilation of temperature readings over a week is provided. Each temperature corresponds to a specific day.
   temperature_data = [72, 75, 68, 70, 74, 79, 81]
   days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
   Expected result looks like below:
   temperature_dict = {
    'Monday': 72,
    'Tuesday': 75,
    'Wednesday': 68,
    'Thursday': 70,
    'Friday': 74,
    'Saturday': 79,
    'Sunday': 81
     }
    Select the appropriate option that generates a dictionary named temperature_dict, associating each day with its respective temperature.
A:  A,B
3.  Inventory Revenue Calculation
    The inventory of a grocery store is being managed. Each product is represented as a dictionary containing keys product_id, name, quantity, and price.
    inventory = [
    {'product_id': 101, 'name': 'Apple', 'quantity': 50, 'price': 0.5},
    {'product_id': 102, 'name': 'Banana', 'quantity': 30, 'price': 0.3},
    {'product_id': 103, 'name': 'Orange', 'quantity': 40, 'price': 0.4}
     ]
    Craft a function named calculate_total_revenue(inventory) that computes the overall revenue generated by the products in the inventory. 
A: def calculate_total_revenue(inventory):
      total_revenue = 0
      for product in inventory:
          revenue = product['quantity']*product['price']
          total_revenue += revenue
      return total_revenue
4. Social Media Engagement Rate
   Information regarding user interaction with posts on a social media platform is available. Each post is represented as a dictionary containing post_id, likes, comments, and shares
   post_data = [
    {'post_id': 101, 'likes': 50, 'comments': 12, 'shares': 5},
    {'post_id': 102, 'likes': 75, 'comments': 8, 'shares': 10},
    {'post_id': 103, 'likes': 30, 'comments': 5, 'shares': 2}
    ]
  Opt for the accurate function calculate_engagement_rate(posts) that evaluates the mean engagement rate across all posts. The engagement rate is defined as the total sum of likes, comments, and shares divided by the total number of posts.
A: B
1.  Which of the following options are correct about the list?
A:  B,D,E
2. Which of the following is true about a Python dictionary?
A: A,C
3. Which of the following methods can be used to add a key-value pair to a Python dictionary?
A: D
4. Which of the following methods can be used to get a list of key-value pairs from a Python dictionary?
A: B
5. Which of the following is true about slicing in Python lists?
A: D
6. Which of the following methods can be used to remove a specific element from a Python list?
A: C
7. Which of the following is true about a Python List and Dictionary?
A: C,E
8. Which of the following methods can be used to add multiple elements to a Python list at once?
A: D
9. Which of the following is true about the zip() function in Python?
A: B
10. What is the output of the following code?
A: D
11. Which of the following is a valid way to create an empty dictionary in Python?
A: A,C
12. What is the output of the following code?
A: C
13. What is the output of the following code?
    my_list = [1, 2, 3]
    my_dict = {'a': 'apple', 'b': 'banana'}
    print(my_list + list(my_dict.values()))
A: A
14. What is the output of the following code?
    my_list = [1, 2, 3]
    print([i * 2 for i in my_list])
A: B
15. Which of the following is a valid way to add a new key-value pair to a dictionary in Python?
A:  A
16. Which of the following methods can be used to sort a Python list in place?
A: C
17. Which of the following is valid way to create a dictionary
A: C
18. What is the output of the following code?
    my_list = [x**2 for x in range(10) if x % 2 == 0]
    print(my_list)
A: C
19. Which of the following is a valid way to remove a key-value pair from a Python dictionary?
A:  A
20. Which of the following is correct way to create a list
A: A
21. Which of the following is a valid way to check if a key is in a Python dictionary?
A: C
22. Which of the following is a valid way to remove a key-value pair from a Python dictionary?
A: D
23. Which of the following statements about list comprehensions in Python is true?
A:  C
24. What is the output of the following code?
     my_dict = {'apple': 2, 'banana': 3, 'orange': 4}
     my_dict.update({'apple': 4, 'pear': 1})
     print(my_dict)
A: A
